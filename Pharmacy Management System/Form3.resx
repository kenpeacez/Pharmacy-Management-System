<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtFFAALRQPgi1UD4atVE/HbVR
        Px21UT8dtVE/HbVRPx21UT8dtVE/HbVRPx21UT8dtVE/HbVRPx21UT8dtVE/HbVRPx21UT8dtVE/HbVR
        Px21UT8dtVA+GrRQPgi1UD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALVRPwC1UT8mtVE/pLVR
        P921UT/itVE/4rVRP+K1UT/itVE/4rVRP+K1UT/itVE/4rVRP+K1UT/itVE/4rVRP+K1UT/itVE/4rVR
        P+K1UT/itVE/4rVRP+K1UT/ctVE/o7VRPyW1UT8AAAAAAAAAAAAAAAAAAAAAAAAAAAC1UD4AtVA+B7VR
        P6O1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE/o7RQPQe0UD4AAAAAAAAAAAAAAAAAAAAAALVR
        PwC1UT8atVE/27VRP/+1UT//tVE//7VRP/+1UT//tlI9/7ZRPv+1UT//tlE9/7ZSPf+1UT//tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT/btVE/GrVRPwAAAAAAAAAAAAAA
        AAAAAAAAtVE/ALVRPx21UT/itVE//7VRP/+1UT//tVE//7VRP/+kRmL/izeW/4Ixqf+NOJP/pkhd/7VR
        Pv+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP+K1UT8dtVE/AAAA
        AAAAAAAAAAAAAAAAAAC1UT8AtVE/HbVRP+K1UT//tVE//7VRP/+1UT7/mkB2/3Ap1v9jH+v/Yh3s/2Ie
        6/9uJdL/mkB3/7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE/4rVR
        Px21UT8AAAAAAAAAAAAAAAAAAAAAALVRPwC1UT8dtVE/4rVRP/+1UT//tlE+/6tKUv98Nsz/h1Lx/2Qg
        6f9jHun/Yx7p/2Id6/9qI9r/mUB5/7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT/itVE/HbVRPwAAAAAAAAAAAAAAAAAAAAAAtVE/ALVRPx21UT/itVE//7VRP/+2Ujz/mz9x/5Bd
        6/+tivP/Yx3p/2Me6f9jHun/Yx7p/2Id6v9rI9r/mUB5/7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT//tVE//7VRP+K1UT8dtVE/AAAAAAAAAAAAAAAAAAAAAAC1UT8AtVE/HbVRP+K1UT//tVE//7ZS
        PP+ZPXX/kmHt/9bF+f97Qez/YRvp/2Me6f9jHun/Yx7p/2Id6v9qItv/nEVu/7VSPf+1UT//tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE/4rVRPx21UT8AAAAAAAAAAAAAAAAAAAAAALVRPwC1UT8dtVE/4rVR
        P/+1UT//tlE9/6dHWv98Otj/0Lz6/8qy9/91OOz/YRzp/2Me6f9jHun/Yh3s/2www/+Ucjf/uXIn/7ZR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT/itVE/HbVRPwAAAAAAAAAAAAAAAAAAAAAAtVE/ALVR
        Px21UT/itVE//7VRP/+1UT//tFFA/4w3kv+GUOv/2cj6/8mx9/92Oez/YRzp/2Id7P9tMMP/kHQ0/76r
        AP/Rsgb/wHUp/7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP+K1UT8dtVE/AAAAAAAAAAAAAAAAAAAA
        AAC1UT8AtVE/HbVRP+K1UT//tVE//7VRP/+1UT7/sk9H/4cznf+HUOv/2cj6/8my9/92Oe7/ay7B/5B0
        NP++qgD/1LwA/9S9AP/Rsgb/wHUp/7VRP/+1UT//tVE//7VRP/+1UT//tVE/4rVRPx21UT8AAAAAAAAA
        AAAAAAAAAAAAALVRPwC1UT8dtVE/4rVRP/+1UT//tVE//7VRP/+1UT7/sU9G/4Yznf+HUev/2Mf8/8uz
        4f+fhEn/vakA/9S8AP/UvAD/1LwA/9S9AP/Rsgb/v3Es/7VQP/+1UT//tVE//7VRP/+1UT/itVE/HbVR
        PwAAAAAAAAAAAAAAAAAAAAAAtVE/ALVRPx21UT/itVE//7VRP/+1UT//tVE//7VRP/+1UT7/sU9G/4Yz
        nv+QYMj/4NWc/+nfkP/ZxCD/1LsA/9S8AP/UvAD/1LwA/9S9AP/Npg3/uFs5/7VQP/+1UT//tVE//7VR
        P+K1UT8dtVE/AAAAAAAAAAAAAAAAAAAAAAC1UT8AtVE/HbVRP+K1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT7/sU5I/6FmOP/MuzX/9e+///Dop//ZxB//1LsA/9S8AP/UvAD/1LwA/9O4Av++by3/tU9A/7VR
        P/+1UT//tVE/4rVRPx21UT8AAAAAAAAAAAAAAAAAAAAAALVRPwC1UT8dtVE/4rVRP/+1UT//tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tlY6/8aMGv/dyTn/9e/B//Dop//ZxB//1LsA/9S8AP/UvAD/1LsB/790
        K/+0T0D/tVE//7VRP/+1UT/itVE/HbVRPwAAAAAAAAAAAAAAAAAAAAAAtVE/ALVRPx21UT/itVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UD//t1Y8/8aMGv/dyjn/9e/B//Hpqf/cyC//1r8L/9bA
        Df/Rsgj/u2Qz/7VQQP+1UT//tVE//7VRP+K1UT8dtVE/AAAAAAAAAAAAAAAAAAAAAAC1UT8AtVE/HbVR
        P+K1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UD//t1Y8/8aLG//dyDj/8uuq//Pt
        tv/p3Xj/2sYp/8WJHv+1Uj7/tVE//7VRP/+1UT//tVE/4rVRPx21UT8AAAAAAAAAAAAAAAAAAAAAALVQ
        PwC1UD8ctVE/37VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UD//tlU9/8F8
        JP/Ppx//17gx/9GrJf/DgST/t1Y8/7VRP/+1UT//tVE//7VRP/+1UT/ftVE/HLVRPwAAAAAAAAAAAAAA
        AAAAAAAAtVA/ALVQPwy1UT+2tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT//tVA//7dXOv+4XDb/t1g6/7VRP/+1UD//tVE//7VRP/+1UT//tVE//7VRP7a1UD4MtVA+AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtVE/ALRRPjq1UT/FtVE/+LVRP/+1UT//tVE//7VRP/+1UT//tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VQP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/m1UT/FtVE/OrRR
        PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzUj4A/w//ALVRPxW1UT9UtVE/pbVRP+W1UT/+tVE//7VR
        P/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE//rVRP+e1UT+ptVE/WLVQ
        PxafaEAAt00+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRRPwC0Tz4GtVE/LbVR
        P3a1UT/FtVE/9bVRP/+1UT//tVE//7VRP/+1UT//tVE//7VRP/+1UT//tVE/9rVRP8e1UT96tVE/L7RQ
        Pga1Uj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC0UD4Ask48ALVQPxK1UT9KtVE/mrVRP9+1UT/8tVE//7VRP/+1UT/9tVE/4bVRP561UT9OtVE+E7lX
        PwC2Uz4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALVRPwC0Uj8EtVE/JbVRP2u1UT+8tVE/vrVRP2+1UT4otFE+BLVQ
        PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5VkIA////ALVRPg20UT8OckpKAKtQ
        QQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////+AAAH/AAAA/gAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfwAAAP+AAAH/4A
        AH//wAP///AP///+f/////////////////8=
</value>
  </data>
</root>